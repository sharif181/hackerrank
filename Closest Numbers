#include <bits/stdc++.h>

void merge(int arr[], int l, int m, int r)
{
    int i, j, k;
    int n1 = m - l + 1;
    int n2 =  r - m;
    int L[n1], R[n2];
    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1+ j];
    i = 0;
    j = 0;
    k = l;
    while (i < n1 && j < n2)
    {
        if (L[i] <= R[j])
        {
            arr[k] = L[i];
            i++;
        }
        else
        {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    while (i < n1)
    {
        arr[k] = L[i];
        i++;
        k++;
    }

    while (j < n2)
    {
        arr[k] = R[j];
        j++;
        k++;
    }
}


void mergeSort(int arr[], int l, int r)
{
    if (l < r)
    {

        int m = l+(r-l)/2;
        mergeSort(arr, l, m);
        mergeSort(arr, m+1, r);

        merge(arr, l, m, r);
    }
}
int min(int a,int b){
    if (a<b) return a;
    else return b;
}

int main()
{
    int n,index=0,mn;
    scanf("%d",&n); 
    int ar[n],ans[n*2];
    for(int i=0;i<n;i++)
        scanf("%d",&ar[i]);
    mergeSort(ar,0,n-1);
    mn=abs(ar[0]-ar[1]);
     for(int i=0;i<n-1;i++){
        mn=min(ar[i+1]-ar[i],mn);
    }
    for(int i=0;i<n-1;i++)
    {
        if(ar[i+1]-ar[i]==mn)
        {
            ans[index]=ar[i];
            ans[index+1]=ar[i+1];
            index+=2;
        }
    }
    for(int i=0;i<index;i++){
        printf("%d ",ans[i]);
    }
}
